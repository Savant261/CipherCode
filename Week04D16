1.

#include <iostream>
using namespace std;

class Node {
public:
    int data;
    Node* next;

    Node(int val) {
        data = val;
        next = nullptr;
    }
};


void insert(Node*& head, int value) {
    Node* newNode = new Node(value);

    if (head == nullptr || head->data >= value) {
        newNode->next = head;
        head = newNode;
        return;
    }

    Node* current = head;
    while (current->next != nullptr && current->next->data < value) {
        current = current->next;
    }

    newNode->next = current->next;
    current->next = newNode;
}

void insertinend(Node*& head, int val) {
    Node* newNode = new Node(val);
    if (head == nullptr) {
        head = newNode;
        return;
    }
    Node* temp = head;
    while (temp->next != nullptr) {
        temp = temp->next;
    }
    temp->next = newNode;
}

void display(Node* head) {
    Node* temp = head;
    while (temp != nullptr) {
        cout << temp->data;
        if (temp->next != nullptr)
            cout << "->";
        temp = temp->next;
    }
    cout << endl;
}

int main() {
    Node* head = nullptr;
    int n, value;

    cout << "Enter the number of elements in the sorted list: ";
    cin >> n;

    cout << "Enter the elements in sorted order: ";
    for (int i = 0; i < n; i++) {
        int element;
        cin >> element;
        insertinend(head, element);
    }

    cout << "Enter the value to insert: ";
    cin >> value;
    insert(head, value);
    cout << "Updated Sorted List: ";
    display(head);

    return 0;
}
